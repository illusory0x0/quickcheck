package moonbitlang/quickcheck/lib/rose

// Values
fn new[T](T, Iter[Rose[T]]) -> Rose[T]

fn pure[T](T) -> Rose[T]

// Types and methods
pub(all) struct Rose {
  val : T
  branch : Iter[Rose[T]]
}
impl Rose {
  apply[T](Self[T], (T, Iter[Self[T]]) -> Self[T]) -> Self[T]
  bind[T, U](Self[T], (T) -> Self[U]) -> Self[U]
  fmap[T, U](Self[T], (T) -> U) -> Self[U]
  join[T](Self[Self[T]]) -> Self[T]
}
impl[T : Show] Show for Rose[T]

// Type aliases

// Traits

